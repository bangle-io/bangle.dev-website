(self.webpackChunkbangle_dev_website=self.webpackChunkbangle_dev_website||[]).push([[2540],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return d},kt:function(){return p}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),m=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},d=function(e){var n=m(e.components);return r.createElement(s.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=m(t),p=o,g=u["".concat(s,".").concat(p)]||u[p]||l[p]||a;return t?r.createElement(g,c(c({ref:n},d),{},{components:t})):r.createElement(g,c({ref:n},d))}));function p(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,c=new Array(a);c[0]=u;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var m=2;m<a;m++)c[m]=t[m];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},87:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return m},toc:function(){return d},default:function(){return u}});var r=t(2122),o=t(9756),a=(t(7294),t(3905)),c=["components"],i={title:"Commands",sidebar_label:"Commands and Interactivty"},s=void 0,m={unversionedId:"guides/commands",id:"guides/commands",isDocsHomePage:!1,title:"Commands",description:"Bangle uses the concept of Commands which is borrowed from Prosemirror to allow for making controlled changes to your editor.",source:"@site/docs/guides/commands.md",sourceDirName:"guides",slug:"/guides/commands",permalink:"/docs/guides/commands",editUrl:"https://github.com/bangle-io/bangle.dev-website/edit/master/_bangle-website/docs/guides/commands.md",version:"current",frontMatter:{title:"Commands",sidebar_label:"Commands and Interactivty"},sidebar:"docs",previous:{title:"Custom Rendering",permalink:"/docs/guides/custom-rendering-speech"},next:{title:"Keybindings",permalink:"/docs/guides/keybindings"}},d=[{value:"Executing a command",id:"executing-a-command",children:[]}],l={toc:d};function u(e){var n=e.components,t=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Bangle uses the concept of ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/core#command"},"Commands")," which is borrowed from ",(0,a.kt)("a",{parentName:"p",href:"https://prosemirror.net/docs/guide/#commands"},"Prosemirror")," to allow for making controlled changes to your editor."),(0,a.kt)("p",null,"In the example below we try out a ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/core#heading-component"},"heading")," command."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"import { components } from '@bangle.dev/core';\n\nconst { heading } = components;\n// Create a command for toggling heading of level 3\nconst command = heading.commands.toggleHeading(3);\n\n// Execute the command\ncommand(state, dispatch);\n")),(0,a.kt)("h3",{id:"executing-a-command"},"Executing a command"),(0,a.kt)("p",null,"To get access to ",(0,a.kt)("inlineCode",{parentName:"p"},"state, dispatch"),", you can save the editor in your applications state management and access it like this:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-js"},"const editor =  new BangleEditor({ ... })\nconst view = editor.view\nconst state = view.state\nconst dispatch = view.dispatch\n\n// dry run a command\nconst success = toggleBold()(view.state);\n// execute the command\ntoggleBold()(state, dispatch);\n")),(0,a.kt)("p",null,"\ud83d\udca1 Bangle will always export a higher order function which returns a command."),(0,a.kt)("p",null,"\ud83d\udcd6 ",(0,a.kt)("a",{parentName:"p",href:"/docs/api/core#command"},"API")," docs for commands."),(0,a.kt)("p",null,"\ud83d\udcd6 Please read the Prosemirror ",(0,a.kt)("a",{parentName:"p",href:"https://prosemirror.net/docs/guide/#commands"},"guide")," on commands for more details."))}u.isMDXComponent=!0}}]);